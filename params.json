{"name":"Graphsom","body":"graphsom\r\n===============\r\n\r\n\r\ngraphsom is a flexible metrics management system for Erlang\r\napplications. It's main goal is for easier collection, management and\r\nreporting of metrics to various backends. \r\n\r\n**[Getting started guide](https://github.com/techtraits/graphsom/wiki/Getting-Started-Guide)**\r\n\r\nFeatures\r\n--------\r\n\r\n* Metric Systems Support\r\n    * [Folsom Metrics](https://github.com/boundary/folsom):\r\n        * All metric types: `gauge`, `counter`, `meter`, `histogram` and `history`\r\n        * All VM metrics: `memory`,`statistics`, `process_info`,\r\n          `system_info` and `port_info`\r\n        * Support for custom handlers for folsom metric types\r\n    * A simple callback-based Graphsom Metrics API is available for\r\n      custom user-defined metrics\r\n\r\n* Visualization Backends  \r\n    * [Graphite](http://graphite.wikidot.com/)\r\n    * Others coming soon\r\n\r\nFolsom Metrics API\r\n------------------\r\n\r\nCreate some folsom metrics ([folsom API](https://github.com/boundary/folsom)):\r\n\r\n```erlang\r\n    \r\nfolsom_metrics:new_counter(metric_name_1).\r\nfolsom_metrics:new_meter(metric_name_2).\r\n```\r\nUpdate values for the metrics:\r\n\r\n```erlang\r\n\t\r\nfolsom_metrics:notify({metric_name_1, {inc, 100}}).\r\nfolsom_metrics:notify({metric_name_2, 300}).\r\n```\r\nRegister folsom metric with `graphsom` for reporting:\r\n\r\n```erlang\r\n\r\ngraphsom:register_folsom_metric(metric_name_1).\r\n```\r\nDe-register folsom metric:\r\n\r\n```erlang\r\n\r\ngraphsom:deregister_folsom_metric(metric_name_1).\r\n```\r\nTo get the list of currently registered folsom metrics\r\n\r\n```erlang\r\n    \r\ngraphsom:registered_metrics().\r\n```\r\n\r\nTo register a specific folsom type handler:\r\n\r\n```erlang\r\n\r\ngraphsom:register_folsom_type_handler(TYPE, MODULE, FUN).\r\n```\r\nThe API can be used to register a handler for all registered folsom metrics\r\nof a certain type. Graphsom calls MODULE:FUN/2 with metric name and\r\ntype to get its value. \r\n\r\nCustom Metrics API\r\n------------------\r\n\r\nGraphsom metrics API is offered when a custom user-defined metric needs to be reported. \r\n  \r\nTo register a custom metric:\r\n\r\n```erlang\r\n    \r\ngraphsom:register_graphsom_metric(METRIC_NAME, MODULE, FUN, PARAMS).\r\n```\r\nGraphsom expects a property list as a response to the callback\r\n`MODULE:FUN` with `PARAMS` as parameters. \r\nNote that `FUN` must be exported by the module `MODULE` with the a correct arity.    \r\n\r\nFor example, we can use Graphsom API to report the number children of a `worker_sup` supervisor, i.e., the result of\r\n\r\n```erlang\r\n    \r\nsupervisor:count_children(worker_sup).\r\n[{specs,2},{active,2},{supervisors,1},{workers,1}]\r\n```\r\nThis can be directly registered with graphsom as follows:\r\n\r\n```erlang    \r\n    \r\ngraphsom:register_graphsom_metric(worker_count, supervisor, count_children, [worker_sup]).\r\n```\r\nReporting Metrics\r\n-----------------\r\n\r\n**Interval-Based Reporting**\r\n\r\nTell graphsom to start reporting. All registered metrics are\r\nreported periodically after a configurable interval. \r\n\r\n```erlang\r\n\r\ngraphsom:start_reporting().\r\n```    \r\n**Manual Reporting**    \r\n\r\n```erlang\r\n\r\ngraphsom:report_now().\r\n```    \r\n\r\nCheck graphite for the values!!\r\n\r\nConfiguration\r\n-------------\r\n\r\nThe configuration parameters for graphsom can be added to application\r\nconfig file (`[RELEASE]/files/sys.config`). An example configuration:\r\n    \r\n    {graphsom, [\r\n             {report_interval, 30000},     %% report interval (ms)\r\n             {graphite_host, \"techtraits.com\"}, %% defaults to localhost\r\n             {graphite_port, 2003},        %% defaults to 2003\r\n             {graphite_prefix, \"graphsom\"}, %% prefix added to all metrics\r\n             {vm_metrics, [memory, statistics]},   %% defaults to []\r\n             {report_all_folsom_metrics, false}   %% defaults to false\r\n            ]}\r\n           \r\n* `graphite_prefix` can be used to specify the prefix prepended to all\r\nmetric names. For example, \"response_time\" would be reported as\r\n\"graphsom.response_time\". \r\n\r\n* `vm_metrics` can be used to report folsom VM metrics\r\n\r\n* If `report_all_folsom_metrics` is set to `true`, graphsom reports all folsom\r\n  metrics that exist at the time of reporting. Alternatively,\r\n  `register_folsom_metric` API can be used for reporting selective metrics to graphite.\r\n\r\nAuthors \r\n-------\r\n\r\nBilal Sheikh (<bilal@techtraits.com>)  \r\nUsman Ismail (<usman@techtraits.com>)\r\n","tagline":"A metrics management and reporting system for Erlang","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}